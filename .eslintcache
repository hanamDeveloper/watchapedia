[{"C:\\Users\\zmf11\\whatchapedia\\src\\index.js":"1","C:\\Users\\zmf11\\whatchapedia\\src\\reducer.js":"2","C:\\Users\\zmf11\\whatchapedia\\src\\App.js":"3","C:\\Users\\zmf11\\whatchapedia\\src\\firebase.js":"4","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\MainContainer.js":"5","C:\\Users\\zmf11\\whatchapedia\\src\\components\\Modal\\Modal.js":"6","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\MoviesContainer.js":"7","C:\\Users\\zmf11\\whatchapedia\\src\\components\\Hedaer.js":"8","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Footer\\FooterContainer.js":"9","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\MovieInfo.js":"10","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Footer\\ContactContainer.js":"11","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Footer\\CountContainer.js":"12","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\MovieSlider\\MoviesSlider.js":"13","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\MainInfo.js":"14","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\PosterContainer.js":"15","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\PaneContainer.js":"16"},{"size":648,"mtime":1610098665011,"results":"17","hashOfConfig":"18"},{"size":1680,"mtime":1610260819873,"results":"19","hashOfConfig":"18"},{"size":697,"mtime":1610247105210,"results":"20","hashOfConfig":"18"},{"size":680,"mtime":1610098670683,"results":"21","hashOfConfig":"18"},{"size":672,"mtime":1610268747299,"results":"22","hashOfConfig":"18"},{"size":5451,"mtime":1610373324996,"results":"23","hashOfConfig":"18"},{"size":390,"mtime":1610247758763,"results":"24","hashOfConfig":"18"},{"size":4458,"mtime":1610373284382,"results":"25","hashOfConfig":"18"},{"size":547,"mtime":1609913555720,"results":"26","hashOfConfig":"18"},{"size":1014,"mtime":1610268640295,"results":"27","hashOfConfig":"18"},{"size":833,"mtime":1609913555687,"results":"28","hashOfConfig":"18"},{"size":425,"mtime":1609913555704,"results":"29","hashOfConfig":"18"},{"size":8059,"mtime":1610372421965,"results":"30","hashOfConfig":"18"},{"size":8278,"mtime":1610247031997,"results":"31","hashOfConfig":"18"},{"size":3675,"mtime":1610165802564,"results":"32","hashOfConfig":"18"},{"size":13646,"mtime":1610373342467,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"wore2l",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\zmf11\\whatchapedia\\src\\index.js",[],["70","71"],"C:\\Users\\zmf11\\whatchapedia\\src\\reducer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\App.js",["72"],"import React, { useEffect } from \"react\";\nimport MainContainer from \"./components/MainContainer/MainContainer\";\nimport { db } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport \"./CSS/reset.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const fetchMovie = async () => {\n    const MOVIE_RESPONSE = db.ref(\"/\");\n    await MOVIE_RESPONSE.on(\"child_added\", (data) => {\n      const movies = data.val();\n      dispatch({ type: \"SAVE_MOVIES\", movies });\n    });\n  };\n\n  useEffect(() => {\n    fetchMovie();\n  }, []);\n\n  return (\n    <>\n      <div className=\"App\">\n        <MainContainer></MainContainer>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\zmf11\\whatchapedia\\src\\firebase.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\MainContainer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\MoviesContainer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\Hedaer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Footer\\FooterContainer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\MovieInfo.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Footer\\ContactContainer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Footer\\CountContainer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\MovieSlider\\MoviesSlider.js",["73"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { useSelector } from \"react-redux\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst MoviesBox = styled.div`\n  .Category {\n    white-space: nowrap;\n    max-width: 1320px;\n    padding: 12px 0 14px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-height: 60px;\n    line-height: 30px;\n  }\n\n  .Category p {\n    color: #292a32;\n    font-size: 22px;\n    font-weight: 1000;\n    letter-spacing: -0.4px;\n    line-height: 30px;\n  }\n`;\n\nconst MoviesSlider = styled.div`\n  position: relative;\n  transform: translate3d(0px, 0px, 0px);\n  margin: 0px -8px;\n\n  li {\n    list-style: none;\n  }\n  img {\n    display: inline-block;\n    width: 13vw;\n    box-sizing: border-box;\n  }\n\n  a {\n    position: relative;\n    display: inline-block;\n    text-decoration: none;\n    margin: 0px 8px;\n  }\n\n  .RankNumber {\n    position: absolute;\n    top: 6px;\n    left: 6px;\n    width: 28px;\n    height: 28px;\n    line-height: 27px;\n    background-color: rgba(0, 0, 0, 0.77);\n    color: rgb(255, 255, 255);\n    font-weight: 700;\n    letter-spacing: normal;\n    text-align: center;\n    border-radius: 4px;\n    opacity: 1;\n    transition: opacity 300ms ease 0s;\n  }\n\n  .Movie,\n  img {\n    border-radius: 5px;\n  }\n\n  .MovieInfo {\n    font-size: 12px;\n    text-align: left;\n    width: calc(100% - 10px);\n    margin: 5px 10px 0 0;\n  }\n\n  .MovieInfo p {\n    color: #292a32;\n    margin: 0;\n    font-size: 14px;\n    font-weight: 400;\n  }\n\n  .MovieInfo__name {\n    font-size: 16px !important;\n    font-weight: bold !important;\n  }\n\n  .MovieInfo__average {\n    color: #555765;\n  }\n\n  .MovieInfo__performance {\n    color: #74747b !important;\n    font-size: 13px !important;\n    letter-spacing: -0.3px;\n  }\n  .slick-prev:before,\n  .slick-next:before {\n    position: absolute;\n    left: 0px;\n    top: -100%;\n    color: black;\n  }\n\n  .slick-initialized .slick-slide {\n    width: 14.05vw !important;\n  }\n\n  .slick-slider {\n    display: flex;\n    justify-content: center;\n\n    .slick-prev.slick-disabled:before,\n    .slick-next.slick-disabled:before {\n      display: none;\n    }\n  }\n`;\n\nfunction MoviesSliderContainer() {\n  const { movies } = useSelector((state) => ({\n    movies: state.movies,\n  }));\n\n  const settings = {\n    infinite: false,\n    arrows: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 5,\n  };\n\n  let movie = movies.slice().sort((a, b) => b.grade - a.grade);\n  const USA = movies.filter((contrys) => contrys.contry === \"미국\");\n  let usa = USA.slice().sort((a, b) => b.grade - a.grade);\n  const KOREA = movies.filter((contrys) => contrys.contry === \"한국\");\n  let korea = KOREA.slice().sort((a, b) => b.grade - a.grade);\n  const JAPAN = movies.filter((contrys) => contrys.contry === \"일본\");\n  let japan = JAPAN.slice().sort((a, b) => b.grade - a.grade);\n\n  return (\n    <>\n      <MoviesBox>\n        <div className=\"Category\">\n          <p>총 평점 순위</p>\n        </div>\n        <MoviesSlider>\n          <div>\n            <Slider {...settings}>\n              {movie.map((movie, rank) => (\n                <div key={movie.id}>\n                  <li>\n                    <Link to={`/movieinfo${movie.id}`}>\n                      <div className=\"Movie\">\n                        <img src={movie.movie_photo} alt=\"\"></img>\n                        <div className=\"RankNumber\">{rank + 1}</div>\n                      </div>\n                      <div className=\"MovieInfo\">\n                        <p className=\"MovieInfo__name\">{movie.movie_name}</p>\n                        <p className=\"MovieInfo__from\">{movie.since}</p>\n                        <p className=\"MovieInfo__average\">\n                          평균★ {movie.grade}\n                        </p>\n                        <p className=\"MovieInfo__performance\">\n                          예매율 34% ・ 누적 관객 30만명\n                        </p>\n                      </div>\n                    </Link>\n                  </li>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </MoviesSlider>\n      </MoviesBox>\n      <MoviesBox>\n        <div className=\"Category\">\n          <p>한국영화 순위</p>\n        </div>\n        <MoviesSlider>\n          <div>\n            <Slider {...settings}>\n              {korea.map((movie, rank) => (\n                <div key={movie.id}>\n                  <li>\n                    <Link to={`/movieinfo${movie.id}`}>\n                      <div className=\"Movie\">\n                        <img src={movie.movie_photo} alt=\"\"></img>\n                        <div className=\"RankNumber\">{rank + 1}</div>\n                      </div>\n                      <div className=\"MovieInfo\">\n                        <p className=\"MovieInfo__name\">{movie.movie_name}</p>\n                        <p className=\"MovieInfo__from\">{movie.since}</p>\n                        <p className=\"MovieInfo__average\">\n                          평균★ {movie.grade}\n                        </p>\n                        <p className=\"MovieInfo__performance\">\n                          예매율 34% ・ 누적 관객 30만명\n                        </p>\n                      </div>\n                    </Link>\n                  </li>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </MoviesSlider>\n      </MoviesBox>\n      <MoviesBox>\n        <div className=\"Category\">\n          <p>미국영화 순위</p>\n        </div>\n        <MoviesSlider>\n          <div>\n            <Slider {...settings}>\n              {usa.map((movie, rank) => (\n                <div key={movie.id}>\n                  <li>\n                    <Link to={`/movieinfo${movie.id}`}>\n                      <div className=\"Movie\">\n                        <img src={movie.movie_photo} alt=\"\"></img>\n                        <div className=\"RankNumber\">{rank + 1}</div>\n                      </div>\n                      <div className=\"MovieInfo\">\n                        <p className=\"MovieInfo__name\">{movie.movie_name}</p>\n                        <p className=\"MovieInfo__from\">{movie.since}</p>\n                        <p className=\"MovieInfo__average\">\n                          평균★ {movie.grade}\n                        </p>\n                        <p className=\"MovieInfo__performance\">\n                          예매율 34% ・ 누적 관객 30만명\n                        </p>\n                      </div>\n                    </Link>\n                  </li>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </MoviesSlider>\n      </MoviesBox>\n      <MoviesBox>\n        <div className=\"Category\">\n          <p>일본영화 순위</p>\n        </div>\n        <MoviesSlider>\n          <div>\n            <Slider {...settings}>\n              {japan.map((movie, rank) => (\n                <div key={movie.id}>\n                  <li>\n                    <Link to={`/movieinfo${movie.id}`}>\n                      <div className=\"Movie\">\n                        <img src={movie.movie_photo} alt=\"\"></img>\n                        <div className=\"RankNumber\">{rank + 1}</div>\n                      </div>\n                      <div className=\"MovieInfo\">\n                        <p className=\"MovieInfo__name\">{movie.movie_name}</p>\n                        <p className=\"MovieInfo__from\">{movie.since}</p>\n                        <p className=\"MovieInfo__average\">\n                          평균★ {movie.grade}\n                        </p>\n                        <p className=\"MovieInfo__performance\">\n                          예매율 34% ・ 누적 관객 30만명\n                        </p>\n                      </div>\n                    </Link>\n                  </li>\n                </div>\n              ))}\n              <a href=\"#!\"></a>\n            </Slider>\n          </div>\n        </MoviesSlider>\n      </MoviesBox>\n    </>\n  );\n}\n\nexport default MoviesSliderContainer;\n","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\MainInfo.js",["74"],"import React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { db } from \"../../../firebase\";\nimport PlusPath from \"../../../IMG/Plus.png\";\n\nconst MainInfoBackground = styled.div`\n  width: 100%;\n  padding-top: 30px;\n  background-color: #f8f8f8;\n`;\n\nconst MainInfoContainer = styled.div`\n  width: 50%;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  background-color: white;\n  border: 1px solid rgb(227, 227, 227);\n  border-radius: 15px;\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  p {\n    margin: 10px 0px;\n  }\n\n  .content-box {\n    width: 95%;\n    padding-bottom: 15px;\n    margin: 0 auto;\n    border-bottom: 1px solid rgb(227, 227, 227);\n\n    &:last-child {\n      border-bottom: none;\n    }\n  }\n\n  .content-box .basic-information {\n    position: relative;\n    display: flex;\n    align-items: center;\n  }\n\n  .content-box .basic-information a {\n    position: absolute;\n    right: 0;\n  }\n\n  .appearance-production {\n    ul {\n      display: flex;\n      flex-wrap: wrap;\n    }\n\n    li {\n      display: flex;\n\n      width: 33%;\n      height: 76px;\n    }\n\n    .character-box {\n      display: flex;\n      align-items: center;\n      width: 100%;\n\n      p {\n        margin: 5px 0 0 0px;\n\n        color: rgb(140, 140, 140);\n        font-size: 14px;\n        font-weight: 400;\n      }\n\n      .title {\n        color: rgb(30, 30, 30);\n        font-size: 16px;\n        font-weight: 700;\n        letter-spacing: -0.7px;\n        line-height: 22px;\n        white-space: nowrap;\n      }\n    }\n\n    li img {\n      width: 56px;\n      width: 56px;\n    }\n\n    li .character-text-box {\n      width: 100%;\n      margin-left: 5%;\n      border-bottom: 1px solid rgb(227, 227, 227);\n    }\n  }\n\n  .coment-box {\n    width: 95%;\n    margin: 0 auto;\n    padding: 15px;\n    background-color: #f8f8f8;\n    justify-content: center;\n    border-radius: 15px;\n\n    .coment-input {\n      display: flex;\n      width: 100%;\n\n      input {\n        width: 80%;\n        padding: 8px 0;\n        border-radius: 7px;\n        border: 2px solid rgb(227, 227, 227);\n      }\n\n      button {\n        width: 20%;\n        display: flex;\n        background-color: rgb(255, 47, 110);\n        box-sizing: border-box;\n        border-radius: 6px;\n        margin: 0px auto;\n        justify-content: center;\n        align-items: center;\n      }\n    }\n\n    span {\n      color: rgb(140, 140, 140);\n\n      &:last-child {\n        margin-left: 5px;\n      }\n    }\n\n    li {\n      padding: 5px 0px 5px 10px;\n      margin: 10px 0;\n      border: 1px solid rgb(227, 227, 227);\n      border-radius: 7px;\n    }\n  }\n`;\n\nfunction MainInfo({ match }) {\n  const { movies, input, users, comments } = useSelector((state) => ({\n    input: state.input,\n    movies: state.movies,\n    users: state.users,\n    comments: state.comments,\n  }));\n\n  const id = useRef(comments.length);\n\n  useEffect(() => {\n    dispatch({\n      type: \"COMMENT_RESET\",\n    });\n\n    const MOVIE_RESPONSE = db.ref(`/Movies/${matchId - 1}/comments`);\n    MOVIE_RESPONSE.on(\"child_added\", (data) => {\n      const commnet = data.val();\n\n      const user = {\n        userName: commnet.userName,\n        comment: commnet.comment,\n        id: id.current++,\n      };\n\n      dispatch({\n        type: \"COMMENT\",\n        user,\n      });\n    });\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const matchId = Number(match.params.id);\n\n  const movie = movies[matchId - 1].character;\n\n  const onChange = (e) => {\n    dispatch({\n      type: \"CHANGE_INPUT\",\n      input: e.target.value,\n    });\n  };\n\n  const onClick = () => {\n    dispatch({\n      type: \"ADD_COMENT\",\n      input,\n    });\n\n    db.ref(`/Movies/${matchId - 1}/comments`).push({\n      comment: input,\n      userName: users.user.userName,\n    });\n  };\n\n  const character1 = movie.map((test) => test.character1);\n  const character2 = movie.map((test) => test.character2);\n  const character3 = movie.map((test) => test.character3);\n  const character4 = movie.map((test) => test.character4);\n  const character5 = movie.map((test) => test.character5);\n  const character6 = movie.map((test) => test.character6);\n\n  return (\n    <MainInfoBackground>\n      <MainInfoContainer>\n        <div className=\"content-box\">\n          <div className=\"basic-information\">\n            <h3>기본정보</h3>\n            <a href=\"#!\">더보기</a>\n          </div>\n          <div className=\"basic-infomation__detail\">\n            <p>{movies[matchId - 1].movie_name}</p>\n            <p>{movies[matchId - 1].movie_genre}</p>\n            <p>{movies[matchId - 1].movie_playtime}</p>\n\n            <h4>내용 </h4>\n            <p>{movies[matchId - 1].movie_story}</p>\n          </div>\n        </div>\n        <div className=\"content-box\">\n          <div className=\"basic-information\">\n            <h3>출연/제작</h3>\n          </div>\n          <div className=\"appearance-production\">\n            <ul>\n              <li>\n                <div className=\"character-box\">\n                  <img src={character1[0].character_image} alt=\"\"></img>\n                  <div className=\"character-text-box\">\n                    <p className=\"title\">{character1[0].character_name}</p>\n                    <p>{character1[0].character_position}</p>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"character-box\">\n                  <img src={character2[0].character_image} alt=\"\"></img>\n                  <div className=\"character-text-box\">\n                    <p className=\"title\">{character2[0].character_name}</p>\n                    <p>{character2[0].character_position}</p>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"character-box\">\n                  <img src={character3[0].character_image} alt=\"\"></img>\n                  <div className=\"character-text-box\">\n                    <p className=\"title\">{character3[0].character_name}</p>\n                    <p>{character3[0].character_position}</p>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"character-box\">\n                  <img src={character4[0].character_image} alt=\"\"></img>\n                  <div className=\"character-text-box\">\n                    <p className=\"title\">{character4[0].character_name}</p>\n                    <p>{character4[0].character_position}</p>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"character-box\">\n                  <img src={character5[0].character_image} alt=\"\"></img>\n                  <div className=\"character-text-box\">\n                    <p className=\"title\">{character5[0].character_name}</p>\n                    <p>{character5[0].character_position}</p>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"character-box\">\n                  <img src={character6[0].character_image} alt=\"\"></img>\n                  <div className=\"character-text-box\">\n                    <p className=\"title\">{character6[0].character_name}</p>\n                    <p>{character6[0].character_position}</p>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"content-box\">\n          <div className=\"basic-information\">\n            <h3>댓글</h3>\n          </div>\n          <div className=\"coment-box\">\n            <div className=\"coment-input\">\n              <input onChange={onChange} value={input}></input>\n              <button onClick={onClick}>\n                <img className=\"StatusImage\" src={PlusPath} alt=\"\"></img>\n              </button>\n            </div>\n            <div className=\"coments\">\n              <ul>\n                {comments.map((comment) => (\n                  <li key={comment.id}>\n                    <span>{comment.userName} :</span>\n                    <span>{comment.comment}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </MainInfoContainer>\n    </MainInfoBackground>\n  );\n}\n\nexport default MainInfo;\n","C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\PosterContainer.js",[],"C:\\Users\\zmf11\\whatchapedia\\src\\components\\MainContainer\\Info\\PaneContainer.js",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":21,"column":6,"nodeType":"82","endLine":21,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":274,"column":15,"nodeType":"86","endLine":274,"endColumn":28},{"ruleId":"80","severity":1,"message":"87","line":181,"column":6,"nodeType":"82","endLine":181,"endColumn":8,"suggestions":"88"},{"ruleId":"80","severity":1,"message":"89","line":235,"column":6,"nodeType":"82","endLine":235,"endColumn":8,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovie'. Either include it or remove the dependency array.","ArrayExpression",["93"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'matchId'. Either include them or remove the dependency array.",["94"],"React Hook useEffect has a missing dependency: 'fetchVotes'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [fetchMovie]",{"range":"102","text":"103"},"Update the dependencies array to be: [dispatch, matchId]",{"range":"104","text":"105"},"Update the dependencies array to be: [fetchVotes]",{"range":"106","text":"107"},[556,558],"[fetchMovie]",[3356,3358],"[dispatch, matchId]",[7609,7611],"[fetchVotes]"]